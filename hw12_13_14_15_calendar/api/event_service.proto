syntax = "proto3";

package event;
option go_package = ".;pb";

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

message Event {
  int64 id = 1;
  string title = 2;
  string description = 3;
  int64 userID = 4 [json_name="user_id"];
  google.protobuf.Timestamp startDate = 5 [json_name="start_date"];
  google.protobuf.Timestamp endDate = 6 [json_name="end_date"];
  google.protobuf.Timestamp notificationDate = 7 [json_name="notification_date"];
}

message GetEventByIDRequest {
  int64 id = 1;
}

message GetEventByIDResponse {
  Event event = 1;
}

message CreateEventRequest {
  Event event = 1;
}

message CreateEventResponse {
  int64 insertedID = 1 [json_name="inserted_id"];
}

message UpdateEventRequest {
  int64 id = 1;
  Event event = 2;
}

message UpdateEventResponse {
  int64 affected = 1;
}

message DeleteEventRequest {
  int64 id = 1;
}

message DeleteEventResponse {
  int64 affected = 1;
}

message Events {
  repeated Event events = 1;
}

message Inserted {
  int64 insertedID = 1 [json_name="inserted_id"];
}

message HealthResponse {
  string status = 1;
}

message UserPeriodEventRequest {
  int64 userID = 1;
  google.protobuf.Timestamp date = 2;
}

message EventListResponse {
  repeated Event events = 1;
}

message HealthRequest {}

service EventService {
  rpc GetEventByID(GetEventByIDRequest) returns (GetEventByIDResponse) {
    option (google.api.http) = {
      get: "/events/{id}"
    };
  };
  rpc CreateEvent(CreateEventRequest) returns (CreateEventResponse) {
    option (google.api.http) = {
      post: "/events"
      body: "*"
    };
  };
  rpc UpdateEvent(UpdateEventRequest) returns (UpdateEventResponse) {
    option (google.api.http) = {
      put: "/events/{id}"
      body: "*"
    };
  };
  rpc DeleteEvent(DeleteEventRequest) returns (DeleteEventResponse) {
    option (google.api.http) = {
      delete: "/events/{id}"
    };
  };
  rpc GetUserDayEvents(UserPeriodEventRequest) returns (EventListResponse) {
    option (google.api.http) = {
      get: "/events/day/{date}"
    };
  };
  rpc GetUserWeekEvents(UserPeriodEventRequest) returns (EventListResponse) {
    option (google.api.http) = {
      get: "/events/week/{date}"
    };
  };
  rpc GetUserMonthEvents(UserPeriodEventRequest) returns (EventListResponse) {
    option (google.api.http) = {
      get: "/events/month/{date}"
    };
  };
  rpc Health(HealthRequest) returns (HealthResponse) {
    option (google.api.http) = {
      get: "/health"
    };
  };
}
